public class BitOperator{
	public static void main(String args[]){
		System.out.println(2 & 3);
		//步骤
		//1.先求出2的补码 （int占4个字节，1个字节是8比特）
		//=> 2的原码 00000000 00000000 00000000 00000010
		//=> 2的补码 00000000 00000000 00000000 00000010 
		//2.再求出3的补码
		//=> 3的原码 00000000 00000000 00000000 00000011
		//=> 3的补码 00000000 00000000 00000000 00000011 
		//3.按位&
		//	00000000 00000000 00000000 00000010
		//	00000000 00000000 00000000 00000011 
		//&----------------------------------------
		//补码：00000000 00000000 00000000 00000010
		//原码：00000000 00000000 00000000 00000010
		//结果：2
		System.out.println(~-2);
		//1.求-2的补码
		//=> -2的原码 10000000 00000000 00000000 00000010
		//=> -2的反码 11111111 11111111 11111111 11111101
		//=> -2的补码 11111111 11111111 11111111 11111110
		//2. ~-2操作  
		//运算后的补码 00000000 00000000 00000000 00000001
		//运算后的原码 00000000 00000000 00000000 00000001	
		//结果：1	
		System.out.println(~2);		
		//1.求2的补码
		//=> 00000000 00000000 00000000 00000010
		//2. ~2操作
		//运算后的补码 11111111 11111111 11111111 11111101
		//运算后的反码 11111111 11111111 11111111 11111100
		//运算后的原码 10000000 00000000 00000000 00000011
		//结果：-3
	}
}
